{"ast":null,"code":"var _jsxFileName = \"/Users/selindursun/my_wire_bender/client/src/DrawingArea.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DrawingArea() {\n  _s();\n  const [lines, setLines] = useState([]);\n  const svgRef = useRef(null);\n  const startLine = event => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const x = event.clientX - svgRect.left;\n    const y = event.clientY - svgRect.top;\n    setLines([...lines, {\n      x1: x,\n      y1: y,\n      x2: x,\n      y2: y\n    }]);\n  };\n  const drawLine = event => {\n    if (!lines.length) return;\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const x = event.clientX - svgRect.left;\n    const y = event.clientY - svgRect.top;\n    const newLines = lines.slice(0, -1);\n    const lastLine = {\n      ...lines[lines.length - 1],\n      x2: x,\n      y2: y\n    };\n    setLines([...newLines, lastLine]);\n  };\n  const endLine = () => {\n    if (!currentLine) return;\n    // Add the current line to the list of completed lines\n    setLines([...lines, currentLine]);\n    // Reset the currentLine to null to start fresh for the next line\n    setCurrentLine(null);\n    fetch('http://localhost:9000/receive-svg', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        lines\n      })\n    }).then(response => response.json()).then(data => console.log(data.message));\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    onMouseDown: startLine,\n    onMouseMove: drawLine,\n    onMouseUp: endLine,\n    style: {\n      border: '1px solid black',\n      cursor: 'crosshair'\n    },\n    width: \"800\",\n    height: \"600\",\n    children: lines.map((line, index) => /*#__PURE__*/_jsxDEV(\"line\", {\n      ...line,\n      stroke: \"black\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(DrawingArea, \"9DyIQyNNOilMgPyKjL5H0JwDw6Y=\");\n_c = DrawingArea;\nexport default DrawingArea;\nvar _c;\n$RefreshReg$(_c, \"DrawingArea\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","DrawingArea","_s","lines","setLines","svgRef","startLine","event","svgRect","current","getBoundingClientRect","x","clientX","left","y","clientY","top","x1","y1","x2","y2","drawLine","length","newLines","slice","lastLine","endLine","currentLine","setCurrentLine","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","message","ref","onMouseDown","onMouseMove","onMouseUp","style","border","cursor","width","height","children","map","line","index","stroke","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/selindursun/my_wire_bender/client/src/DrawingArea.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nfunction DrawingArea() {\n    const [lines, setLines] = useState([]);\n    const svgRef = useRef(null);\n\n    const startLine = (event) => {\n        const svgRect = svgRef.current.getBoundingClientRect();\n        const x = event.clientX - svgRect.left;\n        const y = event.clientY - svgRect.top;\n        setLines([...lines, { x1: x, y1: y, x2: x, y2: y }]);\n    };\n    \n    const drawLine = (event) => {\n        if (!lines.length) return;\n        const svgRect = svgRef.current.getBoundingClientRect();\n        const x = event.clientX - svgRect.left;\n        const y = event.clientY - svgRect.top;\n        const newLines = lines.slice(0, -1);\n        const lastLine = { ...lines[lines.length - 1], x2: x, y2: y };\n        setLines([...newLines, lastLine]);\n    };\n\n\n\n    const endLine = () => {\n        \n        if (!currentLine) return;\n            // Add the current line to the list of completed lines\n        setLines([...lines, currentLine]);\n            // Reset the currentLine to null to start fresh for the next line\n        setCurrentLine(null);\n\n        fetch('http://localhost:9000/receive-svg', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ lines })\n        })\n        .then(response => response.json())\n        .then(data => console.log(data.message));\n    };\n\n    return (\n        <svg\n            ref={svgRef}\n            onMouseDown={startLine}\n            onMouseMove={drawLine}\n            onMouseUp={endLine}\n            style={{ border: '1px solid black', cursor: 'crosshair' }}\n            width=\"800\"\n            height=\"600\"\n        >\n            {lines.map((line, index) => (\n                <line key={index} {...line} stroke=\"black\" />\n            ))}\n        </svg>\n    );\n}\n\nexport default DrawingArea;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}